{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Almog\\\\GITprojects\\\\web2-effi\\\\Web2\\\\web-2\\\\frontend\\\\src\\\\screens\\\\SupportScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet allUsers = [];\nlet allMessages = [];\nlet allSelectedUser = {};\nconst ENDPOINT = window.location.host.indexOf('localhost') >= 0 ? 'http://127.0.0.1:5050' : window.location.host;\nexport default function SupportScreen() {\n  _s();\n  const [selectedUser, setSelectedUser] = useState({});\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  console.log(userInfo);\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n    if (!socket) {\n      const sk = socketIOClient(ENDPOINT);\n      setSocket(sk);\n      sk.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin\n      });\n      sk.on('message', data => {\n        if (allSelectedUser._id === data._id) {\n          allMessages = [...allMessages, data];\n        } else {\n          const existUser = allUsers.find(user => user._id === data._id);\n          if (existUser) {\n            allUsers = allUsers.map(user => user._id === existUser._id ? {\n              ...user,\n              unread: true\n            } : user);\n            setUsers(allUsers);\n          }\n        }\n        setMessages(allMessages);\n      });\n      sk.on('updateUser', updatedUser => {\n        const existUser = allUsers.find(user => user._id === updatedUser._id);\n        if (existUser) {\n          allUsers = allUsers.map(user => user._id === existUser._id ? updatedUser : user);\n          setUsers(allUsers);\n        } else {\n          allUsers = [...allUsers, updatedUser];\n          setUsers(allUsers);\n        }\n      });\n      sk.on('listUsers', updatedUsers => {\n        allUsers = updatedUsers;\n        setUsers(allUsers);\n      });\n      sk.on('selectUser', user => {\n        allMessages = user.messages;\n        setMessages(allMessages);\n      });\n    }\n  }, [messages, socket, users]);\n  const selectUser = user => {\n    allSelectedUser = user;\n    setSelectedUser(allSelectedUser);\n    const existUser = allUsers.find(x => x._id === user._id);\n    if (existUser) {\n      allUsers = allUsers.map(x => x._id === existUser._id ? {\n        ...x,\n        unread: false\n      } : x);\n      setUsers(allUsers);\n    }\n    socket.emit('onUserSelected', user);\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    if (!messageBody.trim()) {\n      alert('Error. Please type message.');\n    } else {\n      allMessages = [...allMessages, {\n        body: messageBody,\n        name: userInfo.name\n      }];\n      setMessages(allMessages);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: selectedUser._id\n        });\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row top full-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-1 support-users\",\n      children: [users.filter(x => x._id !== userInfo._id).length === 0 && /*#__PURE__*/_jsxDEV(MessageBox, {\n        children: \"No Online User Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.filter(x => x._id !== userInfo._id).map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: user._id === selectedUser._id ? user.unread ? 'selected unread' : user.online ? 'selected online' : 'selected offline' : user.unread ? 'unread' : user.online ? 'online' : 'offline',\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"block\",\n            type: \"button\",\n            onClick: () => selectUser(user),\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: user.unread ? 'unread' : user.online ? 'online' : 'offline'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3 support-messages\",\n      children: !selectedUser._id ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        children: \"Select a user to start chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Chat with \", selectedUser.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          ref: uiMessagesRef,\n          children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No message.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 41\n          }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: `${msg.name}: `\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), \" \", msg.body]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitHandler,\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: messageBody,\n              onChange: e => setMessageBody(e.target.value),\n              type: \"text\",\n              placeholder: \"type message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(SupportScreen, \"EViGeuHQajfEh03qEP1O4rxWYHQ=\");\n_c = SupportScreen;\nvar _c;\n$RefreshReg$(_c, \"SupportScreen\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","socketIOClient","useSelector","MessageBox","Store","allUsers","allMessages","allSelectedUser","ENDPOINT","window","location","host","indexOf","SupportScreen","selectedUser","setSelectedUser","socket","setSocket","uiMessagesRef","messageBody","setMessageBody","messages","setMessages","users","setUsers","state","dispatch","ctxDispatch","userInfo","console","log","current","scrollBy","top","clientHeight","left","behavior","sk","emit","_id","name","isAdmin","on","data","existUser","find","user","map","unread","updatedUser","updatedUsers","selectUser","x","submitHandler","e","preventDefault","trim","alert","body","setTimeout","filter","length","online","msg","index","target","value"],"sources":["C:/Users/Almog/GITprojects/web2-effi/Web2/web-2/frontend/src/screens/SupportScreen.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\n\nlet allUsers = [];\nlet allMessages = [];\nlet allSelectedUser = {};\nconst ENDPOINT =\n  window.location.host.indexOf('localhost') >= 0\n    ? 'http://127.0.0.1:5050'\n    : window.location.host;\n\nexport default function SupportScreen() {\n  const [selectedUser, setSelectedUser] = useState({});\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  console.log(userInfo);\n\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n\n    if (!socket) {\n      const sk = socketIOClient(ENDPOINT);\n      setSocket(sk);\n      sk.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin,\n      });\n      sk.on('message', (data) => {\n        if (allSelectedUser._id === data._id) {\n          allMessages = [...allMessages, data];\n        } else {\n          const existUser = allUsers.find((user) => user._id === data._id);\n          if (existUser) {\n            allUsers = allUsers.map((user) =>\n              user._id === existUser._id ? { ...user, unread: true } : user\n            );\n            setUsers(allUsers);\n          }\n        }\n        setMessages(allMessages);\n      });\n      sk.on('updateUser', (updatedUser) => {\n        const existUser = allUsers.find((user) => user._id === updatedUser._id);\n        if (existUser) {\n          allUsers = allUsers.map((user) =>\n            user._id === existUser._id ? updatedUser : user\n          );\n          setUsers(allUsers);\n        } else {\n          allUsers = [...allUsers, updatedUser];\n          setUsers(allUsers);\n        }\n      });\n      sk.on('listUsers', (updatedUsers) => {\n        allUsers = updatedUsers;\n        setUsers(allUsers);\n      });\n      sk.on('selectUser', (user) => {\n        allMessages = user.messages;\n        setMessages(allMessages);\n      });\n    }\n  }, [messages, socket, users]);\n\n  const selectUser = (user) => {\n    allSelectedUser = user;\n    setSelectedUser(allSelectedUser);\n    const existUser = allUsers.find((x) => x._id === user._id);\n    if (existUser) {\n      allUsers = allUsers.map((x) =>\n        x._id === existUser._id ? { ...x, unread: false } : x\n      );\n      setUsers(allUsers);\n    }\n    socket.emit('onUserSelected', user);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!messageBody.trim()) {\n      alert('Error. Please type message.');\n    } else {\n      allMessages = [\n        ...allMessages,\n        { body: messageBody, name: userInfo.name },\n      ];\n      setMessages(allMessages);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: selectedUser._id,\n        });\n      }, 1000);\n    }\n  };\n\n  return (\n    <div className=\"row top full-container\">\n      <div className=\"col-1 support-users\">\n        {users.filter((x) => x._id !== userInfo._id).length === 0 && (\n          <MessageBox>No Online User Found</MessageBox>\n        )}\n        <ul>\n          {users\n            .filter((x) => x._id !== userInfo._id)\n            .map((user) => (\n              <li\n                key={user._id}\n                className={\n                  user._id === selectedUser._id\n                    ? user.unread\n                      ? 'selected unread'\n                      : user.online\n                      ? 'selected online'\n                      : 'selected offline'\n                    : user.unread\n                    ? 'unread'\n                    : user.online\n                    ? 'online'\n                    : 'offline'\n                }\n              >\n                <button\n                  className=\"block\"\n                  type=\"button\"\n                  onClick={() => selectUser(user)}\n                >\n                  {user.name}\n                </button>\n                <span\n                  className={\n                    user.unread ? 'unread' : user.online ? 'online' : 'offline'\n                  }\n                />\n              </li>\n            ))}\n        </ul>\n      </div>\n      <div className=\"col-3 support-messages\">\n        {!selectedUser._id ? (\n          <MessageBox>Select a user to start chat</MessageBox>\n        ) : (\n          <div>\n            <div className=\"row\">\n              <strong>Chat with {selectedUser.name} </strong>\n            </div>\n            <ul ref={uiMessagesRef}>\n              {messages.length === 0 && <li>No message.</li>}\n              {messages.map((msg, index) => (\n                <li key={index}>\n                  <strong>{`${msg.name}: `}</strong> {msg.body}\n                </li>\n              ))}\n            </ul>\n            <div>\n              <form onSubmit={submitHandler} className=\"row\">\n                <input\n                  value={messageBody}\n                  onChange={(e) => setMessageBody(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"type message\"\n                />\n                <button type=\"submit\">Send</button>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}