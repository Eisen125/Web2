[{"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\index.js":"1","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\App.js":"2","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\HomeScreen.js":"4","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\Product.js":"5","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\AllproductsScreen.js":"6","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\Store.js":"7","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\LoadingBox.js":"8","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\MessageBox.js":"9","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\CartScreen.js":"10","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\SigninScreen.js":"11","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\SignupScreen.js":"12","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\OrderScreen.js":"13","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\PaymentMethodScreen.js":"14","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\PlaceOrderScreen.js":"15","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\ShippingAddressScreen.js":"16","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\ProfileScreen.js":"17","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\OrderHistoryScreen.js":"18","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\ProductEditScreen.js":"19","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\SearchScreen.js":"20","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\ProductListScreen.js":"21","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\DashboardScreen.js":"22","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\OrderListScreen.js":"23","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\UserEditScreen.js":"24","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\UserListScreen.js":"25","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\ProtetctedRoute.js":"26","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\Sidebar.jsx":"27","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\Navbar.jsx":"28","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\util.js":"29","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\SearchBox.js":"30","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\CheckoutSteps.js":"31","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\SupportScreen.js":"32","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\MapScreen.js":"33","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\Rating.js":"34","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\AdminRoute.js":"35","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\ChatBox.js":"36","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\ProductScreen.js":"37","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\RecommendedProduct.js":"38"},{"size":903,"mtime":1674221346258,"results":"39","hashOfConfig":"40"},{"size":6525,"mtime":1674304184951,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1672842957592,"results":"42","hashOfConfig":"40"},{"size":2017,"mtime":1674233075354,"results":"43","hashOfConfig":"40"},{"size":1859,"mtime":1674232840671,"results":"44","hashOfConfig":"40"},{"size":2916,"mtime":1674233115940,"results":"45","hashOfConfig":"40"},{"size":2928,"mtime":1674302491852,"results":"46","hashOfConfig":"40"},{"size":222,"mtime":1674117816079,"results":"47","hashOfConfig":"40"},{"size":166,"mtime":1674117816081,"results":"48","hashOfConfig":"40"},{"size":4519,"mtime":1674117859774,"results":"49","hashOfConfig":"40"},{"size":2381,"mtime":1674303792937,"results":"50","hashOfConfig":"40"},{"size":3091,"mtime":1674303494524,"results":"51","hashOfConfig":"40"},{"size":10342,"mtime":1674303435938,"results":"52","hashOfConfig":"40"},{"size":2119,"mtime":1660404592000,"results":"53","hashOfConfig":"40"},{"size":6127,"mtime":1674303465116,"results":"54","hashOfConfig":"40"},{"size":4181,"mtime":1660487518000,"results":"55","hashOfConfig":"40"},{"size":3152,"mtime":1674303759323,"results":"56","hashOfConfig":"40"},{"size":2979,"mtime":1674303450084,"results":"57","hashOfConfig":"40"},{"size":7380,"mtime":1674303983567,"results":"58","hashOfConfig":"40"},{"size":18090,"mtime":1674304006006,"results":"59","hashOfConfig":"40"},{"size":5974,"mtime":1674303808763,"results":"60","hashOfConfig":"40"},{"size":4077,"mtime":1674301404041,"results":"61","hashOfConfig":"40"},{"size":4478,"mtime":1674303442351,"results":"62","hashOfConfig":"40"},{"size":4121,"mtime":1674303498497,"results":"63","hashOfConfig":"40"},{"size":4066,"mtime":1674303503916,"results":"64","hashOfConfig":"40"},{"size":307,"mtime":1660408307000,"results":"65","hashOfConfig":"40"},{"size":2684,"mtime":1674311219711,"results":"66","hashOfConfig":"40"},{"size":4377,"mtime":1674311149968,"results":"67","hashOfConfig":"40"},{"size":165,"mtime":1674303023188,"results":"68","hashOfConfig":"40"},{"size":1076,"mtime":1674301329353,"results":"69","hashOfConfig":"40"},{"size":492,"mtime":1674117816079,"results":"70","hashOfConfig":"40"},{"size":5741,"mtime":1674117859797,"results":"71","hashOfConfig":"40"},{"size":4611,"mtime":1674304034400,"results":"72","hashOfConfig":"40"},{"size":1385,"mtime":1674117816085,"results":"73","hashOfConfig":"40"},{"size":323,"mtime":1674117816077,"results":"74","hashOfConfig":"40"},{"size":2885,"mtime":1674117859766,"results":"75","hashOfConfig":"40"},{"size":4937,"mtime":1674303961946,"results":"76","hashOfConfig":"40"},{"size":1912,"mtime":1674304205415,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"43r3iy",{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"85"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"85"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"85"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"85"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"85"},"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\index.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\App.js",["199","200","201","202"],[],"\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport HomeScreen from './screens/HomeScreen';\r\n import ProductScreen from './screens/ProductScreen';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { Store } from './Store';\r\nimport CartScreen from './screens/CartScreen';\r\nimport Signinscreen from './screens/SigninScreen';\r\nimport ShippingAddressScreen from './screens/ShippingAddressScreen';\r\nimport SignupScreen from './screens/SignupScreen';\r\nimport PaymentMethodScreen from './screens/PaymentMethodScreen';\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\r\nimport OrderScreen from './screens/OrderScreen';\r\nimport OrderHistoryScreen from './screens/OrderHistoryScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport SearchScreen from './screens/SearchScreen';\r\nimport ProtectedRoute from './components/ProtetctedRoute';\r\nimport DashboardScreen from './screens/DashboardScreen';\r\n import AdminRoute from './components/AdminRoute';\r\nimport ProductListScreen from './screens/ProductListScreen';\r\nimport ProductEditScreen from './screens/ProductEditScreen';\r\nimport OrderListScreen from './screens/OrderListScreen';\r\nimport UserListScreen from './screens/UserListScreen';\r\nimport UserEditScreen from './screens/UserEditScreen';\r\nimport MapScreen from './screens/MapScreen';\r\nimport SupportScreen from './screens/SupportScreen';\r\n import ChatBox from './components/ChatBox';\r\nimport NavbarComp from './components/Navbar';\r\nimport Sidebar from './components/Sidebar';\r\nimport AllProductsScreen from './screens/AllproductsScreen';\r\n\r\n\r\nfunction App() {\r\n  \r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const { fullBox, cart, userInfo } = state;\r\n  const [sidebarIsOpen, setSidebarIsOpen] = useState(false);\r\n  \r\n  return (\r\n    <BrowserRouter>\r\n      <div\r\n        className={\r\n          sidebarIsOpen\r\n            ? fullBox\r\n              ? 'site-container active-cont d-flex flex-column full-box'\r\n              : 'site-container active-cont d-flex flex-column'\r\n            : fullBox\r\n            ? 'site-container d-flex flex-column full-box'\r\n            : 'site-container d-flex flex-column'\r\n        }\r\n      >\r\n        <ToastContainer position=\"bottom-center\" limit={1} />\r\n        <NavbarComp setfunc={setSidebarIsOpen} setval={sidebarIsOpen}/>\r\n        <div\r\n          className={\r\n            sidebarIsOpen\r\n              ? 'active-nav side-navbar d-flex justify-content-between flex-wrap flex-column'\r\n              : 'side-navbar d-flex justify-content-between flex-wrap flex-column'\r\n          }\r\n        >\r\n          <Sidebar setfunc={setSidebarIsOpen}/>\r\n          \r\n        </div>\r\n        <main>\r\n          <Container className=\"mt-3\">\r\n            <Routes>\r\n              <Route path=\"/product/:slug\" element={<ProductScreen />} />\r\n              <Route path=\"/cart\" element={<CartScreen />} />\r\n              <Route path=\"/signin\" element={<Signinscreen />} />\r\n              <Route path=\"/shipping\" element={<ShippingAddressScreen />} />\r\n              <Route path=\"/products\" element={<AllProductsScreen />} />\r\n              <Route path=\"/signup\" element={<SignupScreen />} />\r\n              <Route\r\n                path=\"/profile\"\r\n                element={\r\n                  <ProtectedRoute>\r\n                    <ProfileScreen />\r\n                  </ProtectedRoute>\r\n                }\r\n              />\r\n              <Route path=\"/payment\" element={<PaymentMethodScreen />} />\r\n              <Route\r\n                path=\"/map\"\r\n                element={\r\n                  <ProtectedRoute>\r\n                    <MapScreen />\r\n                  </ProtectedRoute>\r\n                }\r\n              />\r\n              <Route path=\"/placeorder\" element={<PlaceOrderScreen />} />\r\n              <Route\r\n                path=\"/order/:id\"\r\n                element={\r\n                  <ProtectedRoute>\r\n                    <OrderScreen />\r\n                  </ProtectedRoute>\r\n                }\r\n              />\r\n              <Route\r\n                path=\"/orderhistory\"\r\n                element={\r\n                  <ProtectedRoute>\r\n                    <OrderHistoryScreen />\r\n                  </ProtectedRoute>\r\n                }\r\n              />\r\n              <Route path=\"/search\" element={<SearchScreen />} />\r\n\r\n              {/* Admin Routes */}\r\n              <Route\r\n                path=\"/admin/dashboard\"\r\n                element={\r\n                  <AdminRoute>\r\n                    <DashboardScreen />\r\n                  </AdminRoute>\r\n                }\r\n              />\r\n              <Route\r\n                path=\"/admin/orders\"\r\n                element={\r\n                  <AdminRoute>\r\n                    <OrderListScreen />\r\n                  </AdminRoute>\r\n                }\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/users\"\r\n                element={\r\n                  <AdminRoute>\r\n                    <UserListScreen />\r\n                  </AdminRoute>\r\n                }\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/products\"\r\n                element={\r\n                  <AdminRoute>\r\n                    <ProductListScreen />\r\n                  </AdminRoute>\r\n                }\r\n              />\r\n              <Route\r\n                path=\"/admin/product/:id\"\r\n                element={\r\n                  <AdminRoute>\r\n                    <ProductEditScreen />\r\n                  </AdminRoute>\r\n                }\r\n              />\r\n              <Route\r\n                path=\"/admin/user/:id\"\r\n                element={\r\n                  <AdminRoute>\r\n                    <UserEditScreen />\r\n                  </AdminRoute>\r\n                }\r\n              />\r\n              <Route\r\n                path=\"/admin/support\"\r\n                element={\r\n                  <AdminRoute>\r\n                    <SupportScreen />\r\n                  </AdminRoute>\r\n                }\r\n              />\r\n\r\n              <Route path=\"/\" element={<HomeScreen />} />\r\n            </Routes>\r\n          </Container>\r\n        </main>\r\n        <footer>\r\n          {userInfo && !userInfo.isAdmin && <ChatBox userInfo={userInfo} />}\r\n          <div className=\"text-center\">\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;",[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\HomeScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\Product.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\AllproductsScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\Store.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\LoadingBox.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\MessageBox.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\CartScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\SigninScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\SignupScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\OrderScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\PaymentMethodScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\PlaceOrderScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\ShippingAddressScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\ProfileScreen.js",["203","204"],[],"import React, { useContext, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../util';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProfileScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false,\n  });\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await axios.put(\n        '/api/users/profile',\n        {\n          name,\n          email,\n          password,\n        },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: 'UPDATE_SUCCESS',\n      });\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      toast.success('User updated successfully');\n    } catch (err) {\n      dispatch({\n        type: 'FETCH_FAIL',\n      });\n      toast.error(getError(err));\n    }\n  };\n\n  return (\n    <div className=\"container small-container\">\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n      <h1 className=\"my-3\">User Profile</h1>\n      <form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Update</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\OrderHistoryScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\ProductEditScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\SearchScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\ProductListScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\DashboardScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\OrderListScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\UserEditScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\UserListScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\ProtetctedRoute.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\Sidebar.jsx",["205"],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\Navbar.jsx",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\util.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\SearchBox.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\CheckoutSteps.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\SupportScreen.js",["206","207","208"],[],"import React, { useContext, useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\n\nlet allUsers = [];\nlet allMessages = [];\nlet allSelectedUser = {};\nconst ENDPOINT =\n  window.location.host.indexOf('localhost') >= 0\n    ? 'http://127.0.0.1:5050'\n    : window.location.host;\n\nexport default function SupportScreen() {\n  const [selectedUser, setSelectedUser] = useState({});\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  console.log(userInfo);\n\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n\n    if (!socket) {\n      const sk = socketIOClient(ENDPOINT);\n      setSocket(sk);\n      sk.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin,\n      });\n      sk.on('message', (data) => {\n        if (allSelectedUser._id === data._id) {\n          allMessages = [...allMessages, data];\n        } else {\n          const existUser = allUsers.find((user) => user._id === data._id);\n          if (existUser) {\n            allUsers = allUsers.map((user) =>\n              user._id === existUser._id ? { ...user, unread: true } : user\n            );\n            setUsers(allUsers);\n          }\n        }\n        setMessages(allMessages);\n      });\n      sk.on('updateUser', (updatedUser) => {\n        const existUser = allUsers.find((user) => user._id === updatedUser._id);\n        if (existUser) {\n          allUsers = allUsers.map((user) =>\n            user._id === existUser._id ? updatedUser : user\n          );\n          setUsers(allUsers);\n        } else {\n          allUsers = [...allUsers, updatedUser];\n          setUsers(allUsers);\n        }\n      });\n      sk.on('listUsers', (updatedUsers) => {\n        allUsers = updatedUsers;\n        setUsers(allUsers);\n      });\n      sk.on('selectUser', (user) => {\n        allMessages = user.messages;\n        setMessages(allMessages);\n      });\n    }\n  }, [messages, socket, users]);\n\n  const selectUser = (user) => {\n    allSelectedUser = user;\n    setSelectedUser(allSelectedUser);\n    const existUser = allUsers.find((x) => x._id === user._id);\n    if (existUser) {\n      allUsers = allUsers.map((x) =>\n        x._id === existUser._id ? { ...x, unread: false } : x\n      );\n      setUsers(allUsers);\n    }\n    socket.emit('onUserSelected', user);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!messageBody.trim()) {\n      alert('Error. Please type message.');\n    } else {\n      allMessages = [\n        ...allMessages,\n        { body: messageBody, name: userInfo.name },\n      ];\n      setMessages(allMessages);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: selectedUser._id,\n        });\n      }, 1000);\n    }\n  };\n\n  return (\n    <div className=\"row top full-container\">\n      <div className=\"col-1 support-users\">\n        {users.filter((x) => x._id !== userInfo._id).length === 0 && (\n          <MessageBox>No Online User Found</MessageBox>\n        )}\n        <ul>\n          {users\n            .filter((x) => x._id !== userInfo._id)\n            .map((user) => (\n              <li\n                key={user._id}\n                className={\n                  user._id === selectedUser._id\n                    ? user.unread\n                      ? 'selected unread'\n                      : user.online\n                      ? 'selected online'\n                      : 'selected offline'\n                    : user.unread\n                    ? 'unread'\n                    : user.online\n                    ? 'online'\n                    : 'offline'\n                }\n              >\n                <button\n                  className=\"block\"\n                  type=\"button\"\n                  onClick={() => selectUser(user)}\n                >\n                  {user.name}\n                </button>\n                <span\n                  className={\n                    user.unread ? 'unread' : user.online ? 'online' : 'offline'\n                  }\n                />\n              </li>\n            ))}\n        </ul>\n      </div>\n      <div className=\"col-3 support-messages\">\n        {!selectedUser._id ? (\n          <MessageBox>Select a user to start chat</MessageBox>\n        ) : (\n          <div>\n            <div className=\"row\">\n              <strong>Chat with {selectedUser.name} </strong>\n            </div>\n            <ul ref={uiMessagesRef}>\n              {messages.length === 0 && <li>No message.</li>}\n              {messages.map((msg, index) => (\n                <li key={index}>\n                  <strong>{`${msg.name}: `}</strong> {msg.body}\n                </li>\n              ))}\n            </ul>\n            <div>\n              <form onSubmit={submitHandler} className=\"row\">\n                <input\n                  value={messageBody}\n                  onChange={(e) => setMessageBody(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"type message\"\n                />\n                <button type=\"submit\">Send</button>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\MapScreen.js",["209"],[],"import axios from 'axios';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport {\n  LoadScript,\n  GoogleMap,\n  StandaloneSearchBox,\n  Marker,\n} from '@react-google-maps/api';\nimport { useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\n\nconst defaultLocation = { lat: 31.9426855, lng: 34.82667 };\nconst libs = ['places'];\n\nclass LoadScriptOnlyIfNeeded extends LoadScript {\n  componentDidMount() {\n    const cleaningUp = true;\n    const isBrowser = typeof document !== 'undefined'; // require('@react-google-maps/api/src/utils/isbrowser')\n    const isAlreadyLoaded =\n      window.google &&\n      window.google.maps &&\n      document.querySelector('body.first-hit-completed'); // AJAX page loading system is adding this class the first time the app is loaded\n    if (!isAlreadyLoaded && isBrowser) {\n      // @ts-ignore\n      if (window.google && !cleaningUp) {\n        console.error('google api is already presented');\n        return;\n      }\n\n      this.isCleaningUp().then(this.injectScript);\n    }\n\n    if (isAlreadyLoaded) {\n      this.setState({ loaded: true });\n    }\n  }\n}\n\nexport default function MapScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const {\n    userInfo,\n    cart: { shippingAddress },\n  } = state;\n\n  const navigate = useNavigate();\n  const [center, setCenter] = useState(defaultLocation);\n  const [location, setLocation] = useState(center);\n\n  const mapRef = useRef(null);\n  const placeRef = useRef(null);\n  const markerRef = useRef(null);\n\n  const getUserCurrentLocation = () => {\n    if (!navigator.geolocation) {\n      alert('Geolocation os not supported by this browser');\n    } else {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setCenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n        setLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      });\n    }\n  };\n  useEffect(() => {\n    const fetch = async () => {\n      const { data } = await axios('/api/keys/google', {\n        headers: { Authorization: `BEARER ${userInfo.token}` },\n      });\n      getUserCurrentLocation();\n    };\n\n    fetch();\n    ctxDispatch({\n      type: 'SET_FULLBOX_ON',\n    });\n  }, [ctxDispatch, userInfo]);\n\n  const onLoad = (map) => {\n    mapRef.current = map;\n  };\n  const onIdle = () => {\n    setLocation({\n      lat: mapRef.current.center.lat(),\n      lng: mapRef.current.center.lng(),\n    });\n  };\n\n  const onLoadPlaces = (place) => {\n    placeRef.current = place;\n  };\n  const onPlacesChanged = () => {\n    const place = placeRef.current.getPlaces()[0].geometry.location;\n    setCenter({ lat: place.lat(), lng: place.lng() });\n    setLocation({ lat: place.lat(), lng: place.lng() });\n  };\n\n  const onMarkerLoad = (marker) => {\n    markerRef.current = marker;\n  };\n\n  const onConfirm = () => {\n    const places = placeRef.current.getPlaces() || [{}];\n    ctxDispatch({\n      type: 'SAVE_SHIPPING_ADDRESS_MAP_LOCATION',\n      payload: {\n        lat: location.lat,\n        lng: location.lng,\n        address: places[0].formatted_address,\n        name: places[0].name,\n        vicinity: places[0].vicinity,\n        googleAddressId: places[0].id,\n      },\n    });\n    toast.success('location selected successfully.');\n    navigate('/shipping');\n  };\n  return (\n    <div className=\"full-box\">\n      <LoadScriptOnlyIfNeeded\n        libraries={libs}\n        googleMapsApiKey={'AIzaSyBS-UMDSXfDIB_H4oFtYv4HaSj0x--NS00'}\n      >\n        <GoogleMap\n          id=\"smaple-map\"\n          mapContainerStyle={{ height: '100%', width: '100%' }}\n          center={center}\n          zoom={20}\n          onLoad={onLoad}\n          onIdle={onIdle}\n        >\n          <StandaloneSearchBox\n            onLoad={onLoadPlaces}\n            onPlacesChanged={onPlacesChanged}\n          >\n            <div className=\"map-input-box\">\n              <input\n                type=\"text\"\n                defaultValue={\n                  shippingAddress.address +\n                  ', ' +\n                  shippingAddress.city +\n                  ', ' +\n                  shippingAddress.country\n                }\n              ></input>\n              <Button type=\"button\" onClick={onConfirm}>\n                Confirm\n              </Button>\n            </div>\n          </StandaloneSearchBox>\n          <Marker position={location} onLoad={onMarkerLoad}></Marker>\n        </GoogleMap>\n      </LoadScriptOnlyIfNeeded>\n    </div>\n  );\n}\n","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\Rating.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\AdminRoute.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\ChatBox.js",["210"],[],"import React, { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst ENDPOINT =\n  window.location.host.indexOf('localhost') >= 0\n    ? 'http://127.0.0.1:5050'\n    : window.location.host;\n\nexport default function ChatBox(props) {\n  const { userInfo } = props;\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([\n    { name: 'Admin', body: 'Hello there, Please ask your question.' },\n  ]);\n\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n    if (socket) {\n      socket.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin,\n      });\n      socket.on('message', (data) => {\n        setMessages([...messages, { body: data.body, name: data.name }]);\n      });\n    }\n  }, [messages, isOpen, socket]);\n\n  const supportHandler = () => {\n    setIsOpen(true);\n    console.log(ENDPOINT);\n    const sk = socketIOClient(ENDPOINT);\n    setSocket(sk);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!messageBody.trim()) {\n      alert('Error. Please type message.');\n    } else {\n      setMessages([...messages, { body: messageBody, name: userInfo.name }]);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: userInfo._id,\n        });\n      }, 1000);\n    }\n  };\n  const closeHandler = () => {\n    setIsOpen(false);\n  };\n  return (\n    <div className=\"chatbox\">\n      {!isOpen ? (\n        <button type=\"button\" onClick={supportHandler}>\n          <i className=\"fa fa-support\" />\n        </button>\n      ) : (\n        <div className=\"card card-body\">\n          <div className=\"row\">\n            <strong>Support </strong>\n            <button type=\"button\" onClick={closeHandler}>\n              <i className=\"fa fa-close\" />\n            </button>\n          </div>\n          <ul ref={uiMessagesRef}>\n            {messages.map((msg, index) => (\n              <li key={index}>\n                <strong>{`${msg.name}: `}</strong> {msg.body}\n              </li>\n            ))}\n          </ul>\n          <div>\n            <form onSubmit={submitHandler} className=\"row\">\n              <input\n                value={messageBody}\n                onChange={(e) => setMessageBody(e.target.value)}\n                type=\"text\"\n                placeholder=\"type message\"\n              />\n              <button type=\"submit\">Send</button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\screens\\ProductScreen.js",[],[],"C:\\Users\\Almog\\GITprojects\\web2-effi\\Web2\\web-2\\frontend\\src\\components\\RecommendedProduct.js",["211"],[],"import axios from 'axios';\nimport React, { useState, useEffect, useContext, useReducer } from 'react';\nimport { Store } from '../Store';\nimport { getError } from '../util';\nimport Product from './Product';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        products: action.payload.products,\n        page: action.payload.page,\n        pages: action.payload.pages,\n        countProducts: action.payload.countProducts,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst RecommendedProduct = () => {\n  const { cartItems } = useContext(Store);\n  const [recommendedProduct, setRecommendedProduct] = useState(false);\n  const cartProductIds = cartItems.map((item) => item.id);\n  const cpc = cartItems.map((item) => item.category);\n  const RandCategory = cpc[Math.floor(Math.random() * cpc.length)];\n\n  const [{ error, products }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(\n          `/api/products/search?page='1'&query='all'&category=${RandCategory}&price='all'&rating=$'all'&order='newest'`\n        );\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\n      } catch (err) {}\n    };\n    fetchData();\n  }, [error, RandCategory]);\n\n  useEffect(() => {\n    products.then((result) => {\n      setRecommendedProduct(false);\n      result.data.some((product) => {\n        if (!cartProductIds.includes(product.id)) {\n          setRecommendedProduct(product);\n          return true;\n        }\n        return false;\n      });\n    });\n  }, [products, cartProductIds]);\n\n  if (recommendedProduct) {\n    return <Product product={recommendedProduct}></Product>;\n  }\n};\n\nexport default RecommendedProduct;\n",{"ruleId":"212","severity":1,"message":"213","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":15},{"ruleId":"212","severity":1,"message":"216","line":8,"column":22,"nodeType":"214","messageId":"215","endLine":8,"endColumn":31},{"ruleId":"212","severity":1,"message":"217","line":38,"column":28,"nodeType":"214","messageId":"215","endLine":38,"endColumn":39},{"ruleId":"212","severity":1,"message":"218","line":39,"column":20,"nodeType":"214","messageId":"215","endLine":39,"endColumn":24},{"ruleId":"212","severity":1,"message":"219","line":30,"column":10,"nodeType":"214","messageId":"215","endLine":30,"endColumn":25},{"ruleId":"212","severity":1,"message":"220","line":32,"column":12,"nodeType":"214","messageId":"215","endLine":32,"endColumn":25},{"ruleId":"212","severity":1,"message":"221","line":2,"column":17,"nodeType":"214","messageId":"215","endLine":2,"endColumn":31},{"ruleId":"212","severity":1,"message":"222","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":21},{"ruleId":"212","severity":1,"message":"217","line":22,"column":28,"nodeType":"214","messageId":"215","endLine":22,"endColumn":39},{"ruleId":"223","severity":1,"message":"224","line":78,"column":6,"nodeType":"225","endLine":78,"endColumn":31,"suggestions":"226"},{"ruleId":"212","severity":1,"message":"227","line":74,"column":15,"nodeType":"214","messageId":"215","endLine":74,"endColumn":19},{"ruleId":"223","severity":1,"message":"224","line":37,"column":6,"nodeType":"225","endLine":37,"endColumn":32,"suggestions":"228"},{"ruleId":"212","severity":1,"message":"229","line":4,"column":10,"nodeType":"214","messageId":"215","endLine":4,"endColumn":18},"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'ctxDispatch' is assigned a value but never used.","'cart' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","'ToastContainer' is defined but never used.","'useSelector' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'userInfo._id', 'userInfo.isAdmin', and 'userInfo.name'. Either include them or remove the dependency array.","ArrayExpression",["230"],"'data' is assigned a value but never used.",["231"],"'getError' is defined but never used.",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [messages, socket, userInfo._id, userInfo.isAdmin, userInfo.name, users]",{"range":"236","text":"237"},"Update the dependencies array to be: [messages, isOpen, socket, userInfo._id, userInfo.name, userInfo.isAdmin]",{"range":"238","text":"239"},[2444,2469],"[messages, socket, userInfo._id, userInfo.isAdmin, userInfo.name, users]",[1098,1124],"[messages, isOpen, socket, userInfo._id, userInfo.name, userInfo.isAdmin]"]